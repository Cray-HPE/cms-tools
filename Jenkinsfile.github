@Library('cms-meta-tools') _
@Library('csm-shared-library') __

pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timestamps()
    }

    environment {
        NAME = "cray-cmstools"
        DESCRIPTION = "Cray Management System - Tests"
        IS_STABLE = getBuildIsStable()
        CMSDEV_SPEC_FILE = "cray-cmstools-crayctldeploy.spec"
        TESTS_SPEC_FILE = "cray-cmstools-crayctldeploy-test.spec"
        BUILD_METADATA = getRpmRevision(isStable: env.IS_STABLE)
        PUBLISH_SP2 = "sle-15sp2"
        PUBLISH_SP3 = "sle-15sp3"
    }

    stages {
        stage("Clone cms_meta_tools repo") {
            steps {
                // This function is defined in cms-meta-tools:vars/cloneCMSMetaTools.groovy
                cloneCMSMetaTools()
            }
        }

        stage("Set Versions") {
            steps {
                // This function is defined in cms-meta-tools:vars/setVersionFiles.groovy
                setVersionFiles()
            }
        }

        stage("runBuildPrep") {
            steps {
                sh "make runbuildprep"
            }
        }

        stage("Lint") {
            steps {
                sh "make lint"
            }
        }

        stage("Add RPM Metadata") {
            parallel {
                stage('Rpm') {
                    steps {
                        runLibraryScript("addRpmMetaData.sh", env.CMSDEV_SPEC_FILE)
                    }
                }
                stage('Rpm Test') {
                    steps {
                        runLibraryScript("addRpmMetaData.sh", env.TESTS_SPEC_FILE)
                    }
                }
            }
        }

        stage("Prepare") {
            steps {
                sh "make prepare"
            }
        }

        stage("Build SP2 rpms") {
            parallel {
                stage('Rpm') {
                    agent {
                        docker {
                            image "arti.dev.cray.com/dstbuildenv-docker-master-local/cray-sle15sp2_build_environment:latest"
                            reuseNode true
                            // Support docker in docker for clamav scan
                            args "-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker --group-add 999"
                        }
                    }
                    steps {
                        sh "make rpm"
                    }
                }

                stage('Rpm Test') {
                    agent {
                        docker {
                            image "arti.dev.cray.com/dstbuildenv-docker-master-local/cray-sle15sp2_build_environment:latest"
                            reuseNode true
                            // Support docker in docker for clamav scan
                            args "-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker --group-add 999"
                        }
                    }
                    steps {
                        sh "make rpm_test"
                    }
                }
            }
        }

        stage('Publish SP2 rpms') {
            steps {
                publishCsmRpms(component: env.NAME, pattern: "dist/rpmbuild/RPMS/x86_64/*.rpm", os: env.PUBLISH_SP2, arch: "x86_64", isStable: env.IS_STABLE)
                publishCsmRpms(component: env.NAME, pattern: "dist/rpmbuild/SRPMS/*.rpm", os: env.PUBLISH_SP2, arch: "src", isStable: env.IS_STABLE)
            }
        }

        stage("Build SP3 rpms") {
            parallel {
                stage('Rpm') {
                    agent {
                        docker {
                            image "arti.dev.cray.com/dstbuildenv-docker-master-local/cray-sle15sp3_build_environment:latest"
                            reuseNode true
                            // Support docker in docker for clamav scan
                            args "-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker --group-add 999"
                        }
                    }
                    steps {
                        sh "make rpm"
                    }
                }

                stage('Rpm Test') {
                    agent {
                        docker {
                            image "arti.dev.cray.com/dstbuildenv-docker-master-local/cray-sle15sp3_build_environment:latest"
                            reuseNode true
                            // Support docker in docker for clamav scan
                            args "-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker --group-add 999"
                        }
                    }
                    steps {
                        sh "make rpm_test"
                    }
                }
            }
        }

        stage('Publish SP3 rpms') {
            steps {
                publishCsmRpms(component: env.NAME, pattern: "dist/rpmbuild/RPMS/x86_64/*.rpm", os: env.PUBLISH_SP3, arch: "x86_64", isStable: env.IS_STABLE)
                publishCsmRpms(component: env.NAME, pattern: "dist/rpmbuild/SRPMS/*.rpm", os: env.PUBLISH_SP3, arch: "src", isStable: env.IS_STABLE)
            }
        }
    }
}
